

// Ability to display details of a single product

// /product/2
/product/:id


// Solution (Monday)
To handle dynamic routes like /products/1, /products/2, etc., in React Router, use route parameters.

STEP :1
Create a ProductDetail.js component.

import React, { useEffect, useState } from "react";
import { useParams } from "react-router-dom";

const ProductDetail = () => {
  const { id } = useParams(); // Read route param
  const [product, setProduct] = useState(null);

  useEffect(() => {
    // Fetch product from JSON server or API
    fetch(`http://localhost:5000/products/${id}`)
      .then((res) => {
        if (!res.ok) throw new Error("Product not found");
        return res.json();
      })
      .then((data) => setProduct(data))
      .catch((err) => console.error(err.message));
  }, [id]);

  if (!product) return <p>Loading product...</p>;

  return (
    <div style={{ padding: "20px" }}>
      <h2>Product Title - {product.title}</h2>
      <p><strong>ID:</strong> {product.id}</p>
      <p><strong>Price:</strong> ${product.price}</p>
    </div>
  );
};

export default ProductDetail;




STEP 2:
In App.js

import ProductDetail from "./ProductDetail"; // Component for individual product

 <Route path="/products/:id" element={<ProductDetail />} />


Step 3: Link to product details from ProductListRedux.js

<table border="1">
         <tr><th>NAME</th><th>PRICE</th><th>DETAILS</th></tr>
    {
        items && items.map(prod => 
        <tr>
            <td> {prod.name} </td> <td> {prod.price} </td> 
            <td> <Link to={`/products/${product.id}`}> DETAILS </Link></td> 
        </tr>
      )
    }
</table>
